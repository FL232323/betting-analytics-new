// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

model Account {
  id                String   @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?  @db.Text
  access_token      String?  @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?  @db.Text
  session_state     String?
  createdAt         DateTime @default(now()) @map(name: "created_at")
  updatedAt         DateTime @default(now()) @map(name: "updated_at")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
  @@map(name: "accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@map(name: "sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @default(now()) @map(name: "updated_at")
  role          UserRole  @default(USER)

  accounts Account[]
  sessions Session[]
  bets     Bet[]
  betLegs  BetLeg[]

  stripeCustomerId       String?   @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?   @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")

  @@map(name: "users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map(name: "verification_tokens")
}

model Bet {
  id              String   @id @default(cuid())
  userId          String
  datePlace       DateTime
  status          String
  league          String
  match           String
  betType         String
  market          String
  price           Float
  wager           Float
  winnings        Float
  payout          Float
  potentialPayout Float
  betSlipId       String
  createdAt       DateTime @default(now())
  
  user    User     @relation(fields: [userId], references: [id])
  legs    BetLeg[]

  @@index([userId])
  @@map(name: "bets")
}

model BetLeg {
  id        String   @id @default(cuid())
  betId     String
  userId    String
  status    String
  league    String
  match     String
  betType   String
  market    String
  price     Float
  result    String
  createdAt DateTime @default(now())

  bet  Bet  @relation(fields: [betId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@index([betId])
  @@index([userId])
  @@map(name: "bet_legs")
}
